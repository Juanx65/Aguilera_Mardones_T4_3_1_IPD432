#-----------------------------------------------------------
# Vivado v2021.1 (64-bit)
# SW Build 3247384 on Thu Jun 10 19:36:33 MDT 2021
# IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
# Start of session at: Mon Mar 21 01:11:24 2022
# Process ID: 6636
# Current directory: C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1
# Command line: vivado.exe -log TOP.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source TOP.tcl -notrace
# Log file: C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP.vdi
# Journal file: C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1\vivado.jou
#-----------------------------------------------------------
source TOP.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/IP_SRC_eucHW/eucDistHW_512'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2021.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.cache/ip 
Command: link_design -top TOP -part xc7a100tcsg324-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7a100tcsg324-1
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.799 . Memory (MB): peak = 1129.484 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 10009 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2021.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.srcs/constrs_1/new/Nexys-4-DDR-Master.xdc]
Finished Parsing XDC File [C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.srcs/constrs_1/new/Nexys-4-DDR-Master.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 1129.484 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

10 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:22 ; elapsed = 00:00:22 . Memory (MB): peak = 1129.484 ; gain = 0.000
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 1129.484 ; gain = 0.000

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 185e0134c

Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 1644.652 ; gain = 515.168

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 1 inverter(s) to 2 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: d2ee7aae

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 1885.129 ; gain = 0.336
INFO: [Opt 31-389] Phase Retarget created 1755 cells and removed 1755 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 102927a63

Time (s): cpu = 00:00:10 ; elapsed = 00:00:09 . Memory (MB): peak = 1885.129 ; gain = 0.336
INFO: [Opt 31-389] Phase Constant propagation created 4760 cells and removed 8975 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 11fb0ec92

Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 1885.129 ; gain = 0.336
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 3 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 11fb0ec92

Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1885.129 ; gain = 0.336
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 11fb0ec92

Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1885.129 ; gain = 0.336
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 11fb0ec92

Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1885.129 ; gain = 0.336
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |            1755  |            1755  |                                              0  |
|  Constant propagation         |            4760  |            8975  |                                              0  |
|  Sweep                        |               0  |               3  |                                              0  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.199 . Memory (MB): peak = 1885.129 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 187daca6d

Time (s): cpu = 00:00:18 ; elapsed = 00:00:17 . Memory (MB): peak = 1885.129 ; gain = 0.336

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
Ending Power Optimization Task | Checksum: 187daca6d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.060 . Memory (MB): peak = 1885.129 ; gain = 0.000

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 187daca6d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 1885.129 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.026 . Memory (MB): peak = 1885.129 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 187daca6d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 1885.129 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
27 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:38 ; elapsed = 00:00:33 . Memory (MB): peak = 1885.129 ; gain = 755.645
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.036 . Memory (MB): peak = 1885.129 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:11 . Memory (MB): peak = 1885.129 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file TOP_drc_opted.rpt -pb TOP_drc_opted.pb -rpx TOP_drc_opted.rpx
Command: report_drc -file TOP_drc_opted.rpt -pb TOP_drc_opted.pb -rpx TOP_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:24 ; elapsed = 00:00:14 . Memory (MB): peak = 1958.281 ; gain = 73.152
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.026 . Memory (MB): peak = 1967.219 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 16e840abc

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.050 . Memory (MB): peak = 1967.219 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.028 . Memory (MB): peak = 1967.219 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 11beda21d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 1967.219 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 216ad6701

Time (s): cpu = 00:00:23 ; elapsed = 00:00:16 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 216ad6701

Time (s): cpu = 00:00:24 ; elapsed = 00:00:16 . Memory (MB): peak = 2247.090 ; gain = 279.871
Phase 1 Placer Initialization | Checksum: 216ad6701

Time (s): cpu = 00:00:24 ; elapsed = 00:00:16 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 18e872e4b

Time (s): cpu = 00:00:31 ; elapsed = 00:00:20 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 216c4391c

Time (s): cpu = 00:00:37 ; elapsed = 00:00:24 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: 216c4391c

Time (s): cpu = 00:00:38 ; elapsed = 00:00:25 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 2.4 Global Placement Core

Phase 2.4.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 7462 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 3413 nets or LUTs. Breaked 0 LUT, combined 3413 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-76] Pass 1. Identified 1 candidate net for fanout optimization.
INFO: [Physopt 32-81] Processed net PROCC/inst/ap_CS_fsm_pp0_stage0. Replicated 8 times.
INFO: [Physopt 32-232] Optimized 1 net. Created 16 new instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 1 net or cell. Created 16 new cells, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.256 . Memory (MB): peak = 2247.090 ; gain = 0.000
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.026 . Memory (MB): peak = 2247.090 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |           3413  |                  3413  |           0  |           1  |  00:00:04  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |           16  |              0  |                     1  |           0  |           1  |  00:00:01  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |           16  |           3413  |                  3414  |           0  |           4  |  00:00:05  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.1 Physical Synthesis In Placer | Checksum: 166c1f952

Time (s): cpu = 00:01:57 ; elapsed = 00:01:14 . Memory (MB): peak = 2247.090 ; gain = 279.871
Phase 2.4 Global Placement Core | Checksum: 11821644c

Time (s): cpu = 00:02:00 ; elapsed = 00:01:16 . Memory (MB): peak = 2247.090 ; gain = 279.871
Phase 2 Global Placement | Checksum: 11821644c

Time (s): cpu = 00:02:00 ; elapsed = 00:01:16 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 19486c8dc

Time (s): cpu = 00:02:07 ; elapsed = 00:01:20 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1b9f69c0e

Time (s): cpu = 00:02:24 ; elapsed = 00:01:33 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 13ad3ff71

Time (s): cpu = 00:02:25 ; elapsed = 00:01:34 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: cee96922

Time (s): cpu = 00:02:26 ; elapsed = 00:01:35 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 139e2611b

Time (s): cpu = 00:02:38 ; elapsed = 00:01:42 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 198d4eca8

Time (s): cpu = 00:02:52 ; elapsed = 00:01:58 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 1c6b1e595

Time (s): cpu = 00:02:57 ; elapsed = 00:02:03 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: feda20c4

Time (s): cpu = 00:02:57 ; elapsed = 00:02:04 . Memory (MB): peak = 2247.090 ; gain = 279.871
Phase 3 Detail Placement | Checksum: feda20c4

Time (s): cpu = 00:02:58 ; elapsed = 00:02:04 . Memory (MB): peak = 2247.090 ; gain = 279.871

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 1ba7257e6

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-0.403 | TNS=-18.397 |
Phase 1 Physical Synthesis Initialization | Checksum: 1ef4a82c3

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2258.918 ; gain = 0.000
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 24fbbce49

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 2258.918 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 1ba7257e6

Time (s): cpu = 00:03:29 ; elapsed = 00:02:25 . Memory (MB): peak = 2258.918 ; gain = 291.699

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.514. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 18062369c

Time (s): cpu = 00:03:35 ; elapsed = 00:02:30 . Memory (MB): peak = 2258.918 ; gain = 291.699

Time (s): cpu = 00:03:35 ; elapsed = 00:02:30 . Memory (MB): peak = 2258.918 ; gain = 291.699
Phase 4.1 Post Commit Optimization | Checksum: 18062369c

Time (s): cpu = 00:03:35 ; elapsed = 00:02:31 . Memory (MB): peak = 2258.918 ; gain = 291.699

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 18062369c

Time (s): cpu = 00:03:36 ; elapsed = 00:02:31 . Memory (MB): peak = 2258.918 ; gain = 291.699

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                1x1|
|___________|___________________|___________________|
|       East|                1x1|                1x1|
|___________|___________________|___________________|
|       West|                1x1|                1x1|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 18062369c

Time (s): cpu = 00:03:36 ; elapsed = 00:02:32 . Memory (MB): peak = 2258.918 ; gain = 291.699
Phase 4.3 Placer Reporting | Checksum: 18062369c

Time (s): cpu = 00:03:36 ; elapsed = 00:02:32 . Memory (MB): peak = 2258.918 ; gain = 291.699

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.031 . Memory (MB): peak = 2258.918 ; gain = 0.000

Time (s): cpu = 00:03:36 ; elapsed = 00:02:32 . Memory (MB): peak = 2258.918 ; gain = 291.699
Phase 4 Post Placement Optimization and Clean-Up | Checksum: ea824f5e

Time (s): cpu = 00:03:37 ; elapsed = 00:02:33 . Memory (MB): peak = 2258.918 ; gain = 291.699
Ending Placer Task | Checksum: d4bcdbb1

Time (s): cpu = 00:03:37 ; elapsed = 00:02:33 . Memory (MB): peak = 2258.918 ; gain = 291.699
INFO: [Common 17-83] Releasing license: Implementation
63 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:03:41 ; elapsed = 00:02:35 . Memory (MB): peak = 2258.918 ; gain = 300.637
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 2258.918 ; gain = 0.000
report_design_analysis: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 2258.918 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:29 ; elapsed = 00:00:20 . Memory (MB): peak = 2258.918 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file TOP_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.036 . Memory (MB): peak = 2258.918 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file TOP_utilization_placed.rpt -pb TOP_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file TOP_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.170 . Memory (MB): peak = 2258.918 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
72 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:16 ; elapsed = 00:00:09 . Memory (MB): peak = 2258.918 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:14 ; elapsed = 00:00:05 . Memory (MB): peak = 2262.703 ; gain = 3.785
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:21 ; elapsed = 00:00:12 . Memory (MB): peak = 2262.703 ; gain = 3.785
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: ade40f43 ConstDB: 0 ShapeSum: 26d8cc6e RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: bdf41a01

Time (s): cpu = 00:00:37 ; elapsed = 00:00:26 . Memory (MB): peak = 2389.297 ; gain = 58.355
Post Restoration Checksum: NetGraph: ba697254 NumContArr: 38aa7ad Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: bdf41a01

Time (s): cpu = 00:00:38 ; elapsed = 00:00:27 . Memory (MB): peak = 2389.297 ; gain = 58.355

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: bdf41a01

Time (s): cpu = 00:00:39 ; elapsed = 00:00:27 . Memory (MB): peak = 2393.504 ; gain = 62.562

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: bdf41a01

Time (s): cpu = 00:00:39 ; elapsed = 00:00:27 . Memory (MB): peak = 2393.504 ; gain = 62.562
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 17d2b7f99

Time (s): cpu = 00:01:08 ; elapsed = 00:00:47 . Memory (MB): peak = 2456.516 ; gain = 125.574
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.678  | TNS=0.000  | WHS=-0.129 | THS=-30.032|

Phase 2 Router Initialization | Checksum: 25f2ed2ca

Time (s): cpu = 00:01:26 ; elapsed = 00:00:58 . Memory (MB): peak = 2787.473 ; gain = 456.531

Router Utilization Summary
  Global Vertical Routing Utilization    = 8.70436e-05 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 83356
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 83355
  Number of Partially Routed Nets     = 1
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 25f2ed2ca

Time (s): cpu = 00:01:27 ; elapsed = 00:00:59 . Memory (MB): peak = 2787.473 ; gain = 456.531
Phase 3 Initial Routing | Checksum: 48bb33ec

Time (s): cpu = 00:01:46 ; elapsed = 00:01:10 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 8354
 Number of Nodes with overlaps = 888
 Number of Nodes with overlaps = 158
 Number of Nodes with overlaps = 49
 Number of Nodes with overlaps = 19
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.021  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1347194ba

Time (s): cpu = 00:03:03 ; elapsed = 00:02:13 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 50
 Number of Nodes with overlaps = 23
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 3
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.136  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1ae980527

Time (s): cpu = 00:03:13 ; elapsed = 00:02:22 . Memory (MB): peak = 2787.473 ; gain = 456.531
Phase 4 Rip-up And Reroute | Checksum: 1ae980527

Time (s): cpu = 00:03:13 ; elapsed = 00:02:22 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 1ae980527

Time (s): cpu = 00:03:13 ; elapsed = 00:02:23 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 1ae980527

Time (s): cpu = 00:03:13 ; elapsed = 00:02:23 . Memory (MB): peak = 2787.473 ; gain = 456.531
Phase 5 Delay and Skew Optimization | Checksum: 1ae980527

Time (s): cpu = 00:03:14 ; elapsed = 00:02:23 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 17dae2b10

Time (s): cpu = 00:03:20 ; elapsed = 00:02:27 . Memory (MB): peak = 2787.473 ; gain = 456.531
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.143  | TNS=0.000  | WHS=0.032  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 19a762947

Time (s): cpu = 00:03:20 ; elapsed = 00:02:27 . Memory (MB): peak = 2787.473 ; gain = 456.531
Phase 6 Post Hold Fix | Checksum: 19a762947

Time (s): cpu = 00:03:20 ; elapsed = 00:02:28 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 16.677 %
  Global Horizontal Routing Utilization  = 18.116 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1a5d119cc

Time (s): cpu = 00:03:21 ; elapsed = 00:02:28 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1a5d119cc

Time (s): cpu = 00:03:21 ; elapsed = 00:02:28 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 18e4c4a00

Time (s): cpu = 00:03:28 ; elapsed = 00:02:35 . Memory (MB): peak = 2787.473 ; gain = 456.531

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.143  | TNS=0.000  | WHS=0.032  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 18e4c4a00

Time (s): cpu = 00:03:33 ; elapsed = 00:02:39 . Memory (MB): peak = 2787.473 ; gain = 456.531
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:03:34 ; elapsed = 00:02:39 . Memory (MB): peak = 2787.473 ; gain = 456.531

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
87 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:03:58 ; elapsed = 00:02:52 . Memory (MB): peak = 2787.473 ; gain = 524.770
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:17 ; elapsed = 00:00:07 . Memory (MB): peak = 2787.473 ; gain = 0.000
report_design_analysis: Time (s): cpu = 00:00:07 ; elapsed = 00:00:08 . Memory (MB): peak = 2787.473 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:30 ; elapsed = 00:00:20 . Memory (MB): peak = 2787.473 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file TOP_drc_routed.rpt -pb TOP_drc_routed.pb -rpx TOP_drc_routed.rpx
Command: report_drc -file TOP_drc_routed.rpt -pb TOP_drc_routed.pb -rpx TOP_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:35 ; elapsed = 00:00:19 . Memory (MB): peak = 2787.473 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file TOP_methodology_drc_routed.rpt -pb TOP_methodology_drc_routed.pb -rpx TOP_methodology_drc_routed.rpx
Command: report_methodology -file TOP_methodology_drc_routed.rpt -pb TOP_methodology_drc_routed.pb -rpx TOP_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/TOP_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:20 ; elapsed = 00:00:13 . Memory (MB): peak = 2787.473 ; gain = 0.000
INFO: [runtcl-4] Executing : report_power -file TOP_power_routed.rpt -pb TOP_power_summary_routed.pb -rpx TOP_power_routed.rpx
Command: report_power -file TOP_power_routed.rpt -pb TOP_power_summary_routed.pb -rpx TOP_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
99 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:28 ; elapsed = 00:00:15 . Memory (MB): peak = 2787.473 ; gain = 0.000
INFO: [runtcl-4] Executing : report_route_status -file TOP_route_status.rpt -pb TOP_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file TOP_timing_summary_routed.rpt -pb TOP_timing_summary_routed.pb -rpx TOP_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file TOP_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file TOP_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file TOP_bus_skew_routed.rpt -pb TOP_bus_skew_routed.pb -rpx TOP_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force TOP.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U258/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U258/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U259/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U259/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U260/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U260/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U261/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U261/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U262/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U262/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U263/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U263/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U264/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U264/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U265/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U265/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U266/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U266/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U267/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U267/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U268/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U268/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U269/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U269/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U270/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U270/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U271/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U271/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U272/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U272/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U273/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U273/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U274/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U274/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U275/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U275/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U276/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U276/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U277/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U277/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U278/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U278/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U279/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U279/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U280/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U280/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U281/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U281/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U282/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U282/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U283/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U283/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U284/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U284/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U285/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U285/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U286/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U286/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U287/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U287/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U288/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U288/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U289/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U289/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U290/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U290/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U291/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U291/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U292/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U292/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U293/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U293/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U294/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U294/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U295/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U295/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U296/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U296/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U297/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U297/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U298/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U298/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U299/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U299/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U300/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U300/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U301/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U301/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U302/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U302/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U303/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U303/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U304/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U304/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U305/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U305/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U306/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U306/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U307/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U307/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U308/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U308/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U309/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U309/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U310/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U310/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U311/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U311/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U312/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U312/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U313/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U313/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U314/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U314/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U315/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U315/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U316/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U316/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U317/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U317/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U318/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U318/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U319/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U319/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U320/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U320/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U321/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U321/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U322/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U322/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U323/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U323/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U324/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U324/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U325/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U325/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U326/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U326/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U327/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U327/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U328/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U328/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U329/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U329/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U330/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U330/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U331/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U331/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U332/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U332/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U333/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U333/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U334/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U334/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U335/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U335/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U336/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U336/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U337/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U337/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U338/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U338/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U339/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U339/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U340/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U340/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U341/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U341/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U342/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U342/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U343/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U343/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U344/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U344/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U345/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U345/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U346/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U346/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U347/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U347/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U348/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U348/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U349/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U349/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U350/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U350/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U351/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U351/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U352/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U352/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U353/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U353/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U354/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U354/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U355/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U355/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U356/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U356/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U357/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U357/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 120 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./TOP.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [#UNDEF] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/Users/juan_/Desktop/Aguilera_Mardones_T4_3_1_IPD432/SRC_VIVADO_DESIGN/T4_EUC_HLS/T4_EUC_HLS.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Mon Mar 21 01:20:47 2022. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2021.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
14 Infos, 100 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:50 ; elapsed = 00:00:37 . Memory (MB): peak = 3201.836 ; gain = 414.363
INFO: [Common 17-206] Exiting Vivado at Mon Mar 21 01:20:48 2022...
